# Generated by Django 2.2.10 on 2022-03-13 21:30

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rols', '0001_initial'),
        ('regions', '0002_region_country'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified.', verbose_name='modified at')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Name of User')),
                ('run', models.CharField(blank=True, max_length=32, verbose_name='RUN of User')),
                ('birth_date', models.DateField(verbose_name='Birth date')),
                ('cellphone', models.CharField(blank=True, max_length=32, verbose_name='cellphone of User')),
                ('telephone', models.CharField(blank=True, max_length=32, verbose_name='Telfone of User')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='addresss')),
                ('need_update_profile', models.BooleanField(default=False)),
                ('reviewed_by_admin', models.CharField(choices=[('A', 'PASSED'), ('R', 'REJECTED'), ('P', 'PENDING')], max_length=2, verbose_name='Reviewed by Admin')),
                ('username', models.CharField(blank=True, max_length=255, unique=True, verbose_name='username')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('rol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='rols.Rol')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified.', verbose_name='modified at')),
                ('name', models.CharField(max_length=128, verbose_name='Law Area')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RUNPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_l', models.ImageField(max_length=255, null=True, upload_to='x/x1', verbose_name='picture size large 1024x1024')),
                ('img_m', models.ImageField(default='', max_length=255, null=True, upload_to='x/x5', verbose_name='picture size medium 400x400')),
                ('thumbnail', models.ImageField(default='', max_length=255, null=True, upload_to='x/x4', verbose_name='picture size small 70x70')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified.', verbose_name='modified at')),
                ('status', models.BooleanField(default=True, verbose_name='current_profile picture')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runpictures', to=settings.AUTH_USER_MODEL, verbose_name='runpictures')),
            ],
            options={
                'verbose_name': 'RUN imagen',
                'verbose_name_plural': 'Run imagenes',
            },
        ),
        migrations.CreateModel(
            name='ProfilePicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_l', models.ImageField(max_length=255, null=True, upload_to='x/x1', verbose_name='picture size large 1024x1024')),
                ('img_m', models.ImageField(default='', max_length=255, null=True, upload_to='x/x5', verbose_name='picture size medium 400x400')),
                ('thumbnail', models.ImageField(default='', max_length=255, null=True, upload_to='x/x4', verbose_name='picture size small 70x70')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified.', verbose_name='modified at')),
                ('is_current_profile_picture', models.BooleanField(default=True, verbose_name='current_profile picture')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profilepictures', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Foto de Perfil',
                'verbose_name_plural': 'Fotos de Perfil',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateTimeField(verbose_name='Fecha de Nacimiento')),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male'), ('NB', 'No Binary'), ('PND', 'I prefer not to say')], max_length=4, verbose_name='Genero')),
                ('live_in', models.TextField(blank=True, null=True, verbose_name='Live in')),
                ('phone_number', models.TextField(blank=True, default='', null=True, verbose_name='Número de teléfono')),
                ('web_site', models.TextField(blank=True, default='', null=True, verbose_name='Web Site')),
                ('about_me', models.TextField(blank=True, default='', null=True, verbose_name='About Me')),
                ('country', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Pais')),
                ('language', models.CharField(blank=True, default='en', max_length=255, null=True, verbose_name='Idioma')),
                ('head_line', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Head line')),
                ('birth_date_state', models.BooleanField(default=True, verbose_name='Birth date is public.')),
                ('gender_state', models.BooleanField(default=True, verbose_name='Gender State is public.')),
                ('live_in_state', models.BooleanField(default=True, verbose_name='Live in  is public.')),
                ('phone_number_state', models.BooleanField(default=True, verbose_name='Phone is public.')),
                ('web_site_state', models.BooleanField(default=True, verbose_name='Web Site is public.')),
                ('about_me_state', models.BooleanField(default=True, verbose_name='About Me is public.')),
                ('country_state', models.BooleanField(default=True, verbose_name='Country is public.')),
                ('language_state', models.BooleanField(default=True, verbose_name='Language is public.')),
                ('head_line_state', models.BooleanField(default=True, verbose_name='Headline is public.')),
                ('email_state', models.BooleanField(default=True, verbose_name='Email is public.')),
                ('account_state', models.BooleanField(default=True, verbose_name='Account visible.')),
                ('account_public', models.BooleanField(default=True, verbose_name='Cuenta publica.')),
                ('term_of_services_accepted', models.BooleanField(default=True, verbose_name='Term of service.')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('deleted_date', models.DateTimeField(blank=True, null=True)),
                ('change_password', models.BooleanField(default=False, verbose_name='Need to change Password.')),
                ('old_password', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Idioma')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ghuser')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
        migrations.CreateModel(
            name='MatriculaPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_l', models.ImageField(max_length=255, null=True, upload_to='x/x1', verbose_name='picture size large 1024x1024')),
                ('img_m', models.ImageField(default='', max_length=255, null=True, upload_to='x/x5', verbose_name='picture size medium 400x400')),
                ('thumbnail', models.ImageField(default='', max_length=255, null=True, upload_to='x/x4', verbose_name='picture size small 70x70')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified.', verbose_name='modified at')),
                ('status', models.BooleanField(default=True, verbose_name='current_profile picture')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matriculapictures', to=settings.AUTH_USER_MODEL, verbose_name='matriculapictures')),
            ],
            options={
                'verbose_name': 'Foto de Perfil',
                'verbose_name_plural': 'Fotos de Perfil',
            },
        ),
        migrations.CreateModel(
            name='Lawyer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified.', verbose_name='modified at')),
                ('matricula', models.CharField(blank=True, max_length=32, verbose_name='Matricula')),
                ('areas', models.ManyToManyField(to='users.Area')),
                ('region', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='regions.Region')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='lawyer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_l', models.ImageField(max_length=255, null=True, upload_to='x/x1', verbose_name='picture size large 1024x1024')),
                ('img_m', models.ImageField(default='', max_length=255, null=True, upload_to='x/x5', verbose_name='picture size medium 400x400')),
                ('thumbnail', models.ImageField(default='', max_length=255, null=True, upload_to='x/x4', verbose_name='picture size small 70x70')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified.', verbose_name='modified at')),
                ('university', models.CharField(max_length=256, verbose_name='University')),
                ('career', models.CharField(max_length=256, verbose_name='Career')),
                ('academic_degree', models.CharField(choices=[('DI', 'Diploma'), ('TE', 'Technician degree'), ('CO', 'College degree'), ('MA', "Master's degree"), ('DO', 'Doctoral degree / Doctorate'), ('PD', 'Post Doctoral degree /Post Doctorate')], max_length=2)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='degrees', to=settings.AUTH_USER_MODEL, verbose_name='degree')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified.', verbose_name='modified at')),
                ('permission', models.CharField(choices=[('A01', 'Admin:Access'), ('U02', 'User:CreateAdmin'), ('U03', 'User:CreateLawyer'), ('U04', 'User:CreateCustomer'), ('U05', 'User:Login')], max_length=3)),
                ('state', models.BooleanField(default=True)),
                ('rol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_permissions', to='rols.Rol')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'permission')},
            },
        ),
    ]
